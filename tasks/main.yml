---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#

- block:
    - name: Create directory where puppet-openstack logs will be stored
      file:
        path: "{{ puppet_workspace }}"
        state: "directory"
        recurse: "yes"

    - name: Install required packages
      yum:
        name: "{{ item }}"
        state: "latest"
      with_items: "{{ required_packages }}"
      retries: "3"
      delay: "20"

    # scenario001 uses Ceph backend for Cinder, Glance, Gnocchi
    # scenario004 uses Ceph backend with rgw for Glance
    - name: Include extra repositories if required
      include: "repositories/{{ openstack_release }}.yml"
      when: test == "scenario001" or test == "scenario004"

    # Workaround for https://github.com/ansible/ansible-modules-core/issues/4431
    - name: Clone upstream puppet-openstack-integration repository
      git:
        repo: "{{ repository }}"
        dest: "{{ clone_path }}"
        version: "{{ version }}"
        force: "yes"
      when: refspec is not defined

    - name: Clone puppet-openstack-integration with a review in progress
      git:
        repo: "{{ repository }}"
        dest: "{{ clone_path }}"
        refspec: "{{ refspec }}"
        version: "FETCH_HEAD"
        force: "yes"
      when: refspec is defined

    - name: Create bundled gems directory
      file:
        path: "{{ clone_path }}/.bundled_gems"
        state: directory

    - name: Configure kvm hypervisor if running nested virtualization
      lineinfile:
        line: "openstack_integration::nova::libvirt_virt_type: kvm"
        state: "present"
        insertafter: "EOF"
        dest: "{{ clone_path }}/hiera/common.yaml"
      when: nested_virtualization

    - name: "Run puppet integration test - {{ test }}"
      command: "./run_tests.sh"
      args:
        chdir: "{{ clone_path }}"
      environment:
        MANAGE_REPOS: "{{ manage_repos }}"
        SCENARIO: "{{ test }}"
        GEM_HOME: "{{ clone_path }}/.bundled_gems"

    - name: "Recover puppet-openstack logs"
      include: logs.yml
  vars:
    task: "tasks/main.yml"
  rescue:
    - name: Failure occurred, executing rescue
      include: roles/common/tasks/rescue.yml
