---
#   Copyright Red Hat, Inc. All Rights Reserved.
#
#   Licensed under the Apache License, Version 2.0 (the "License"); you may
#   not use this file except in compliance with the License. You may obtain
#   a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
#   WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
#   License for the specific language governing permissions and limitations
#   under the License.
#

- name: Install required packages
  package:
    name: "{{ required_packages }}"
    state: "latest"
  retries: "3"
  delay: "20"

# scenario001 uses Ceph backend for Cinder, Glance, Gnocchi
# scenario004 uses Ceph backend with rgw for Glance
- name: Include extra repositories if required
  include: "repositories/{{ openstack_release }}.yml"
  when: test == "scenario001" or test == "scenario004"
  static: no

- block:
    # Workaround for https://github.com/ansible/ansible-modules-core/issues/4431
    - name: Clone upstream puppet-openstack-integration repository
      git:
        repo: "{{ repository }}"
        dest: "{{ clone_path }}"
        version: "{{ version }}"
        force: "yes"
      when: refspec is not defined
  rescue:
    - name: Clone upstream puppet-openstack-integration repository from master branch (fallback)
      git:
        repo: "{{ repository }}"
        dest: "{{ clone_path }}"
        version: "master"
        force: "yes"
      when: refspec is not defined

- name: Clone puppet-openstack-integration with a review in progress
  git:
    repo: "{{ repository }}"
    dest: "{{ clone_path }}"
    refspec: "{{ refspec }}"
    version: "FETCH_HEAD"
    force: "yes"
  when: refspec is defined

- name: Create bundled gems directory
  file:
    path: "{{ clone_path }}/.bundled_gems"
    state: directory

- block:
  - name: get packages list
    shell: "grep ^mod {{ clone_path }}/Puppetfile |egrep -v '{{ modules_rpm_excludes[openstack_release] }}' |awk '{print $2}'|sed \"s/[,']//g\"|while read p; do printf puppet-$p,; done|sed 's/,$//'"
    register: puppet_rpm_list

  - name: Install puppet modules from rpm
    package:
      name: "{{ puppet_rpm_list.stdout }}"
      state: present
  when: enable_puppet_modules_rpm

- name: Set up qemu-kvm and nested virtualization if available
  include: qemu-kvm.yml
  static: no

- block:
    - name: "Run puppet integration test - {{ test }}"
      command: "./run_tests.sh"
      args:
        chdir: "{{ clone_path }}"
      environment:
        MANAGE_REPOS: "{{ manage_repos }}"
        SCENARIO: "{{ test }}"
        GEM_HOME: "{{ clone_path }}/.bundled_gems"
        TEMPEST_VERSION: "{{ tempest_version }}"
        WORKSPACE: "{{ puppet_workspace }}"
        TEMPEST_FROM_SOURCE: "{{ tempest_from_source }}"
        PUPPETFILE_DIR: "/etc/puppet/modules"
        PUPPET_ARGS: "--modulepath={{ puppet_modules_path }}"
  always:
    - name: Recover puppet integration test logs
      command: "./copy_logs.sh"
      environment:
        WORKSPACE: "{{ puppet_workspace }}"
      args:
        chdir: "{{ clone_path }}"
        creates: "{{ puppet_workspace }}/logs"
      ignore_errors: true
